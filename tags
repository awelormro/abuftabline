!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/abu/Plantillas/abuftabline/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20221218.0/
Abuftabline vs. X	README.md	/^Abuftabline vs. X$/;"	s
Buffer basics	README.md	/^Buffer basics$/;"	s
Why this and not Vim tabs?	README.md	/^Why this and not Vim tabs?$/;"	s
abuftabline	plugin/abuftabline.vim	/^augroup abuftabline$/;"	a
abuftabline#render	plugin/abuftabline.vim	/^function! abuftabline#render()$/;"	f
abuftabline#update	plugin/abuftabline.vim	/^function! abuftabline#update(zombie)$/;"	f
abuftabline#user_buffers	plugin/abuftabline.vim	/^function! abuftabline#user_buffers() " help buffers are always unlisted, but quickfix buffers ar/;"	f
g:abuftabline_indicators	plugin/abuftabline.vim	/^let g:abuftabline_indicators = get(g:, 'abuftabline_indicators', 0)$/;"	v
g:abuftabline_le_sep	plugin/abuftabline.vim	/^let g:abuftabline_le_sep     = get(g:, 'abuftabline_left_separator', '')$/;"	v
g:abuftabline_numbers	plugin/abuftabline.vim	/^let g:abuftabline_numbers    = get(g:, 'abuftabline_numbers',    0)$/;"	v
g:abuftabline_plug_max	plugin/abuftabline.vim	/^let g:abuftabline_plug_max   = get(g:, 'abuftabline_plug_max',  10)$/;"	v
g:abuftabline_ri_sep	plugin/abuftabline.vim	/^let g:abuftabline_ri_sep     = get(g:, 'abuftabline_right_separator', '')$/;"	v
g:abuftabline_separators	plugin/abuftabline.vim	/^let g:abuftabline_separators = get(g:, 'abuftabline_separators', 0)$/;"	v
g:abuftabline_show	plugin/abuftabline.vim	/^let g:abuftabline_show       = get(g:, 'abuftabline_show',       2)$/;"	v
s:SID	plugin/abuftabline.vim	/^function s:SID()$/;"	f
s:b	plugin/abuftabline.vim	/^	let s:b = s:n == -1 ? -1 : s:n - 1$/;"	v
s:centerbuf	plugin/abuftabline.vim	/^let s:centerbuf = winbufnr(0)$/;"	v
s:dirsep	plugin/abuftabline.vim	/^let s:dirsep = fnamemodify(getcwd(),':p')[-1:]$/;"	v
s:sid	plugin/abuftabline.vim	/^let s:sid = s:SID() | delfunction s:SID$/;"	v
s:switch_buffer	plugin/abuftabline.vim	/^function! s:switch_buffer(bufnum, clicks, button, mod)$/;"	f
s:tablineat	plugin/abuftabline.vim	/^let s:tablineat = has('tablineat')$/;"	v
s:transpile	plugin/abuftabline.vim	/^	function s:transpile()$/;"	f
